pipeline {
    agent none
    stages {
        stage('Save Files') {
			agent { label 'principal' }
            steps {
                sh '''
				whoami
				hostname
				echo $WORKSPACE
                '''
				stash includes: '**', name: 'unit'
				stash includes: '**', name: 'rest'
            }
        }
        stage('Test'){
            parallel {
                stage('Unit') {
					agent { label 'agent1' }
					options { skipDefaultCheckout() }
                    steps {
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
							unstash 'unit'
                            sh '''
							whoami
						    hostname
							echo $WORKSPACE
                            export PYTHONPATH=$WORKSPACE
                            python3 -m coverage run --branch --source=app --omit=app/init_py,app/api.py -m pytest --junitxml=result-unit.xml test/unit
                            '''
							stash includes: 'result-unit.xml', name: 'unit-results'
                        }
                    }
                }
                stage('Services') {
					agent { label 'agent2' }
					options { skipDefaultCheckout() }
                    steps {
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
							unstash 'rest'
                            sh '''
							whoami
						    hostname
							echo $WORKSPACE
                            export PYTHONPATH=$WORKSPACE
                            export FLASK_APP=app/api.py
                            nohup flask run > flask.log 2>&1 &
                            nohup java -jar test/wiremock.jar --port 9090 --root-dir test/wiremock > wiremock.log 2>&1 &
                            sleep 10
                            python3 -m pytest --junitxml=result-rest.xml test/rest
                            '''
							stash includes: 'result-rest.xml', name: 'services-results'
                        }
                    }
                }
            }
        }
        stage('Results') {
			agent { label 'principal' }
			options { skipDefaultCheckout() }
            steps {
                sh '''
				whoami
				hostname
				echo $WORKSPACE
                '''
				unstash 'unit'
				unstash 'services'
                junit 'result*.xml'
            }

            post {
                always {
                    cleanWs()
				}
			}
        }
    }
}